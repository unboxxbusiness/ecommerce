
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Products can be read by anyone, but only written by admins
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Site content can be read by anyone, but only written by admins
    match /siteContent/main {
       allow read: if true;
       allow write: if isAdmin();
    }
    
    // Pages can be read if published, but only written by admins
    match /pages/{pageId} {
      allow read: if resource.data.isPublished == true;
      allow write: if isAdmin();
    }

    // Customers collection rules
    match /customers/{userId} {
      // Allow a user to create their own customer document
      allow create: if request.auth.uid == userId
                    && request.resource.data.role == 'customer'; // Prevent setting admin role on signup
      
      // Allow a user to read and update their own data
      allow read, update: if request.auth.uid == userId;

      // Admins can read, update and delete any customer
      allow read, update, delete: if isAdmin();
    }
    
    // Coupons can be queried by clients, but only written by admins.
    match /coupons/{couponId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn(); // To check for a coupon code
      allow write: if isAdmin();
    }

    // Orders can be created by any signed-in user for themselves
    // They can be read by the user who owns it, or by an admin
    // Only admins can update/delete orders
    match /orders/{orderId} {
      allow create: if isSignedIn() 
                    && request.resource.data.customerEmail == request.auth.token.email;
                    
      allow read: if isSignedIn() 
                  && (resource.data.customerEmail == request.auth.token.email || isAdmin());

      allow update, delete: if isAdmin();
    }

    // Admins collection can only be read and written by other admins
    match /admins/{userId} {
        allow read, write: if isAdmin();
    }
  }
}
