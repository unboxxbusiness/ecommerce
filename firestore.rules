rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/customers/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Products can be read by anyone, but only written by admins.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Customers can only be read/written by the owner or an admin.
    // New customers are created via the signup function's backend logic.
    match /customers/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create, delete: if isAdmin();
    }
    
    // Orders can be created by any authenticated user.
    // They can only be read by the customer who owns them or an admin.
    // They can only be updated (e.g., status change) or deleted by an admin.
    match /orders/{orderId} {
      allow create: if request.auth != null;
      allow read: if request.auth.token.email == resource.data.customerEmail || isAdmin();
      allow update, delete: if isAdmin();
    }
    
    // Active coupons can be read by anyone.
    // All coupon management (create, update, delete) requires admin privileges.
    match /coupons/{couponId} {
      allow read: if resource.data.isActive == true;
      allow write: if isAdmin();
      allow list: if isAdmin(); // Only admins can list all coupons
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
