
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Publicly readable collections
    match /products/{productId} {
      allow read: if true;
    }
    match /siteContent/{docId} {
        allow read: if true;
    }
    match /pages/{pageId} {
        allow read: if resource.data.isPublished == true;
    }

    // Customer-specific rules
    match /customers/{userId} {
      // Customers can read and update their own data.
      allow read: if request.auth.uid == userId;
      allow write: if request.auth.uid == userId;
      
      // Admins can manage all customer data
      allow read, write: if isAdmin();
    }
    
    // Authenticated users can create orders and read their own orders
    match /orders/{orderId} {
      allow create: if request.auth != null;
      allow read: if request.auth.uid != null && resource.data.customerEmail == request.auth.token.email;
      // Admins can manage all orders
      allow read, write: if isAdmin();
    }

    // Coupon rules
    match /coupons/{couponId} {
        // Customers can read active coupons by code (used in cart)
        allow read: if resource.data.isActive == true;
        // Admins can manage all coupons
        allow create, read, write: if isAdmin();
    }
    
    // Admin collections (only admins can read/write to this)
    match /admins/{adminId} {
        allow read, write: if isAdmin();
    }
  }
}
