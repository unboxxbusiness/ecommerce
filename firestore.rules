
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Admins can read/write all collections
    match /{collection}/{docId} {
      allow read, write: if isAdmin();
    }
    
    // Products can be read by anyone, but only written by admins
    match /products/{productId} {
      allow get: if true;
      allow list, create, update, delete: if isAdmin();
    }
    
    // Customers can only access their own data
    match /customers/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if request.auth != null;
    }
    
    // Site content can be read by anyone, written by admins
    match /siteContent/main {
      allow get: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // Pages can be read by anyone, written by admins
    match /pages/{pageId} {
        allow get: if true;
        allow list, create, update, delete: if isAdmin();
    }
    
    // Orders can be created by any authenticated user
    match /orders/{orderId} {
        allow create: if request.auth != null;
        allow read, update, list: if isAdmin() || request.auth.token.email == resource.data.customerEmail;
    }
    
    // Coupons can be read by anyone, written by admins
    match /coupons/{couponId} {
        allow get: if true;
        allow list, create, update, delete: if isAdmin();
    }
  }
}
